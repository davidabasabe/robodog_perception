// generated from rosidl_adapter/resource/msg.idl.em
// with input from ros_bt_py_interfaces/msg/Tree.msg
// generated code does not contain a copyright notice

#include "ros_bt_py_interfaces/msg/Node.idl"
#include "ros_bt_py_interfaces/msg/NodeDataLocation.idl"
#include "ros_bt_py_interfaces/msg/NodeDataWiring.idl"

module ros_bt_py_interfaces {
  module msg {
    module Tree_Constants {
      const string IDLE = "IDLE";
      const string EDITABLE = "EDITABLE";
      const string TICKING = "TICKING";
      const string WAITING_FOR_TICK = "WAITING_FOR_TICK";
      const string STOP_REQUESTED = "STOP_REQUESTED";
      const string ERROR = "ERROR";
    };
    @verbatim (language="comment", text=
      "Copyright 2023 FZI Forschungszentrum Informatik" "\n"
      "" "\n"
      "Redistribution and use in source and binary forms, with or without" "\n"
      "modification, are permitted provided that the following conditions are met:" "\n"
      "" "\n"
      "   * Redistributions of source code must retain the above copyright" "\n"
      "     notice, this list of conditions and the following disclaimer." "\n"
      "" "\n"
      "   * Redistributions in binary form must reproduce the above copyright" "\n"
      "     notice, this list of conditions and the following disclaimer in the" "\n"
      "     documentation and/or other materials provided with the distribution." "\n"
      "" "\n"
      "   * Neither the name of the FZI Forschungszentrum Informatik nor the names of its" "\n"
      "     contributors may be used to endorse or promote products derived from" "\n"
      "     this software without specific prior written permission." "\n"
      "" "\n"
      "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"" "\n"
      "AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE" "\n"
      "IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE" "\n"
      "ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE" "\n"
      "LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR" "\n"
      "CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF" "\n"
      "SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS" "\n"
      "INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN" "\n"
      "CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)" "\n"
      "ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE" "\n"
      "POSSIBILITY OF SUCH DAMAGE." "\n"
      "A descriptive name for this tree. At runtime, this is chosen by the" "\n"
      "tree manager node.")
    struct Tree {
      string name;

      @verbatim (language="comment", text=
        "A string pointing to a YAML file to read a tree from, if" "\n"
        "any. Can be a file:// or a package:// string. Please don't build" "\n"
        "infinite loops using this.")
      string path;

      string root_name;

      sequence<ros_bt_py_interfaces::msg::Node> nodes;

      sequence<ros_bt_py_interfaces::msg::NodeDataWiring> data_wirings;

      double tick_frequency_hz;

      @verbatim (language="comment", text=
        "One of the constants below")
      string state;

      @verbatim (language="comment", text=
        "These are accessible when using this tree as a subtree")
      sequence<ros_bt_py_interfaces::msg::NodeDataLocation> public_node_data;
    };
  };
};
